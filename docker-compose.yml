version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: sailclub-postgres
    environment:
      POSTGRES_DB: sailclub_db
      POSTGRES_USER: sailclub_user
      POSTGRES_PASSWORD: sailclub_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sailclub-network
    restart: unless-stopped

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sailclub-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://sailclub_user:sailclub_password@postgres:5432/sailclub_db
      DIRECT_URL: postgresql://sailclub_user:sailclub_password@postgres:5432/sailclub_db
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this-in-production
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
      PORT: 5000
      FRONTEND_URL: http://localhost:3000
      QR_CODE_SECRET: your-qr-code-encryption-key-change-this-in-production
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs
    depends_on:
      - postgres
    networks:
      - sailclub-network
    restart: unless-stopped
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sailclub-frontend
    environment:
      VITE_API_URL: http://localhost:5000/api
      VITE_WS_URL: ws://localhost:5000
      VITE_APP_NAME: SailClub Partnership
      VITE_APP_VERSION: 1.0.0
      VITE_NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - sailclub-network
    restart: unless-stopped
    command: npm run dev

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: sailclub-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sailclub-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  sailclub-network:
    driver: bridge
